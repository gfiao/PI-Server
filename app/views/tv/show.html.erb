<!DOCTYPE html>
<html>
<head lang="en">
  <meta charset="UTF-8">
  <%= stylesheet_link_tag 'tv.css' %>
  <%= stylesheet_link_tag 'mediaelementplayer.css' %>
  <%= javascript_include_tag 'jquery-2.1.1.min.js', 'application' %>
  <%= javascript_include_tag 'mediaelement-and-player.min.js', 'application' %>
  <%= javascript_include_tag 'trabalho.js' %>

</head>
<body onload="init()">

<div class="" id="main">

  <div class="" id="video-and-lateral">

    <div class="" id="logotype">
      <h2>CampusTV</h2>
    </div>

    <div class="" id="view-area">


    </div>

    <script>

        var videos = [];

        jQuery.extend({
            getValues: function (url) {
                var result = null;
                $.ajax({
                    url: url,
                    type: 'get',
                    dataType: 'json',
                    async: false,
                    cache: false,
                    success: function (data) {
                        result = data;
                    }
                });
                return result;
            }
        });

        videos = $.getValues('/videos');
        // console.log(videos);

        //  2. This code loads the IFrame Player API code asynchronously.
        var tag = document.createElement('script');

        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        // 3. This function creates an <iframe> (and YouTube player)
        //    after the API code downloads.
        var player;
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('view-area', {
                height: '390',
                width: '640',
                //videoId: videos[counterVid].link.split('/')[4], //retorna codigo dos videos
                playerVars: { 'autoplay': 1, 'showinfo': 0, 'rel': 0, 'controls': 0, 'modestbranding': 1},
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                }
            });
        }

        // 4. The API will call this function when the video player is ready.
        function onPlayerReady(event) {

            var codigos = [];
            $.each(videos, function (i, video) {
                codigos[i] = video.link.split('/')[4];
            });

            player.loadPlaylist(codigos, 0, 0);
            event.target.playVideo();
        }

        // 5. The API calls this function when the player's state changes.
        var done = false;
        function onPlayerStateChange(event) {
            if (event.data == YT.PlayerState.ENDED) {
                onPlayerReady(event); //Isto funciona, mas deixa a pagina um pouco lenta ao inicio
            }
        }
    </script>


    <div class="" id="right-panel">

      <div class="" id="right-panel-top">
        <div id="hour-date">
          <div id="hour-info">
            <h1></h1>
          </div>
          <div id="date-info">
            <h3></h3>

            <!--<h3 id="lastLine"></h3>-->
          </div>

        </div>
      </div>
      <div class="" id="right-panel-middle">


      </div>

      <div class="" id="right-panel-bottom">
        <div id="meteo-info">
          <div id="meteo-min-temp">
            <div id="max-temp-img">

            </div>
            <div id="max-temp-value">

            </div>
          </div>
          <div id="meteo-max-temp">
            <div id="min-temp-img">

            </div>
            <div id="min-temp-value">

            </div>
          </div>
        </div>
      </div>


    </div>

  </div>

  <div class="" id="footer">

    <div class="" id="category">
      <p><b>ÚLTIMA HORA</b></p>
    </div>

    <div class="" id="news-container">
      <p>Uma pequena noticia, só para arrancar com a cena hehehehehehehehehehehehehe</p>
    </div>

  </div>

</div>

</body>
</html>